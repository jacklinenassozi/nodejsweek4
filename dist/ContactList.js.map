{"version":3,"sources":["../src/ContactList.js"],"names":["writeFile","util","promisify","fs","readFile","Contact","constructor","obj","id","name","age","email","addPhone","number","phoneNumber","call","console","log","birthday","ContactList","filename","list","load","addContact","contact","push","save","editContact","b","removeContact","i","splice","path","resolve","__dirname","JSON","stringify","then","readFilePromise","fileString","parse","map","contactObj","Promise"],"mappings":";;;;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAFA;AAIA,MAAMA,YAAYC,eAAKC,SAAL,CAAeC,aAAGH,SAAlB,CAAlB,C,CANA;;AAOA,MAAMI,WAAWH,eAAKC,SAAL,CAAeC,aAAGC,QAAlB,CAAjB;;AAEO,MAAMC,OAAN,CAAc;AACjBC,aAAYC,GAAZ,EAAiB;AACnB,OAAKC,EAAL,GAAQD,IAAIC,EAAZ;AACM,OAAKC,IAAL,GAAYF,IAAIE,IAAhB;AACN,OAAKC,GAAL,GAAWH,IAAIG,GAAf;AACA,OAAKC,KAAL,GAAWJ,IAAII,KAAf;AACA;;AAEEC,UAASC,MAAT,EAAiB;;AAEb,SAAO,KAAKC,WAAL,GAAmBD,MAA1B;AACH;AACAE,QAAO;;AAEH,MAAI,KAAKD,WAAT,EACIE,QAAQC,GAAR,CAAY,aAAa,KAAKR,IAAlB,GAAyB,MAAzB,GAAkC,KAAKK,WAAnD,EADJ,KAGIE,QAAQC,GAAR,CAAY,KAAKR,IAAL,GAAY,6BAAxB;AAEP;AACDS,YAAW;;AAEPF,UAAQC,GAAR,CAAY,aAAa,KAAKR,IAAlB,GAAyB,WAAzB,IAAwC,KAAKC,GAAL,GAAS,CAAjD,IAAsD,cAAlE;AAEH;AAxBe,C,QAARL,O,GAAAA,O;AAyBZ;;AAEM,MAAMc,WAAN,CAAkB;AACxBb,aAAYc,QAAZ,EAAqB;AACpB,OAAKC,IAAL,GAAY,EAAZ;AACA,OAAKD,QAAL,GAAgBA,QAAhB;AACA,OAAKE,IAAL;AACA;;AAEDC,YAAWC,OAAX,EAAmB;AAClB,MAAGA,mBAAmBnB,OAAtB,EAA+B;AAC9B,QAAKgB,IAAL,CAAUI,IAAV,CAAeD,OAAf;AACAR,WAAQC,GAAR,CAAY,WAAZ,EAAyB,KAAKI,IAA9B;AACA,UAAO,KAAKK,IAAL,CAAU,KAAKL,IAAf,CAAP;AACA;AAED;AACDM,aAAYC,CAAZ,EAAc;AACZ,SAAOA,CAAP;AACD;;AAECC,eAAcC,CAAd,EAAgB;AACnB,MAAG,KAAKT,IAAL,CAAUS,CAAV,CAAH,EAAgB;AACf,QAAKT,IAAL,CAAUU,MAAV,CAAiBD,CAAjB,EAAmB,CAAnB;AACA;AACG;;AAEHJ,MAAKL,IAAL,EAAU;AACT,SAAOrB,UAAUgC,eAAKC,OAAL,CAAaC,SAAb,EAAwB,KAAKd,QAA7B,CAAV,EAAkDe,KAAKC,SAAL,CAAef,IAAf,CAAlD,EAAwE,MAAxE,EACNgB,IADM,CACD,MAAM;AACX,UAAOhB,IAAP;AACA,GAHM,CAAP;AAIA;;AAEDC,QAAM;AACL,QAAMgB,kBAAkBlC,SAAS4B,eAAKC,OAAL,CAAaC,SAAb,EAAwB,KAAKd,QAA7B,CAAT,EAAiD,MAAjD,CAAxB;;AAEA,SAAOkB,gBACND,IADM,CACDE,cAAc;AACnB,QAAKlB,IAAL,GAAYc,KAAKK,KAAL,CAAWD,UAAX,EACXE,GADW,CACPC,cAAc,IAAIrC,OAAJ,CAAYqC,UAAZ,CADP,CAAZ;;AAGA,UAAOC,QAAQV,OAAR,CAAgB,IAAhB,CAAP;AACA,GANM,CAAP;AAOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAnDuB,C,QAAZd,W,GAAAA,W;AAoDZ","file":"ContactList.js","sourcesContent":["// const fs = require(\"fs\");\nimport fs from \"fs\";\n// const util = require(\"util\");\nimport util from \"util\";\nimport path from \"path\";\n\nconst writeFile = util.promisify(fs.writeFile);\nconst readFile = util.promisify(fs.readFile);\n\nexport class Contact {\n    constructor(obj) {\n\t\tthis.id=obj.id\n        this.name = obj.name;\n\t\tthis.age = obj.age;\n\t\tthis.email=obj.email\n\t};\n\t\n    addPhone(number) {\n\n        return this.phoneNumber = number;\n    }\n     call() {\n\n         if (this.phoneNumber)\n             console.log(\"Calling \" + this.name + \" at \" + this.phoneNumber);\n         else\n             console.log(this.name + \" has no phone number saved.\");\n\n     }\n     birthday() {\n\n         console.log(\"Wishing \" + this.name + \" a happy \" + (this.age+1) + \"th birthday!\");\n\n     }\n};\n\nexport class ContactList {\n\tconstructor(filename){\n\t\tthis.list = [];\n\t\tthis.filename = filename;\n\t\tthis.load();\n\t}\n\n\taddContact(contact){\n\t\tif(contact instanceof Contact) {\n\t\t\tthis.list.push(contact);\n\t\t\tconsole.log(\"this.list\", this.list);\n\t\t\treturn this.save(this.list);\n\t\t}\n\t\t\n\t}\n\teditContact(b){\n\t\t\treturn b;\n\t}\n\n   removeContact(i){\nif(this.list[i]){\n\tthis.list.splice(i,1);\n}\n   }\n\n\tsave(list){\n\t\treturn writeFile(path.resolve(__dirname, this.filename), JSON.stringify(list), \"utf8\")\n\t\t.then(() => {\n\t\t\treturn list;\t\n\t\t});\n\t}\n\n\tload(){\n\t\tconst readFilePromise = readFile(path.resolve(__dirname, this.filename), \"utf8\");\n\n\t\treturn readFilePromise\n\t\t.then(fileString => {\n\t\t\tthis.list = JSON.parse(fileString)\n\t\t\t.map(contactObj => new Contact(contactObj));\n\n\t\t\treturn Promise.resolve(null);\n\t\t});\n\t\t// return new Promise((resolve, reject) => {\n\t\t// \treadFilePromise\n\t\t// \t.then(fileString => {\n\t\t// \t\tthis.list = JSON.parse(fileString)\n\t\t// \t\t.map(contactObj => new Contact(contactObj));\n\t\t\t\t\n\t\t// \t\tresolve(null);\n\t\t// \t});\n\t\t// });\n\t}\n};"]}